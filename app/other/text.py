from app.other.classes import GetData
from decimal import Decimal
from app.other.utils import check_fo_none

async def set_text():
    r"""

    –§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ—Ç–∏—Ä–æ–≤–∫–∞–º–∏ –≤–∞–ª—é—Ç.

    :return: –°—Ç—Ä–æ–∫–∞ —Å –∫–æ—Ç–∏—Ä–æ–≤–∫–∞–º–∏ –≤–∞–ª—é—Ç.

    """

    gd = GetData()
    res: dict = await gd() 
    if await check_fo_none(res) == False:
        return 0
    ch: dict = await price_correction(res)
    main_text = (f"–ö–æ—Ç–∏—Ä–æ–≤–∫–∏:\n"
                f"Investing USD/RUBüí≤ - {res["investing"]["price"]} ({res['investing']["change"]} —Ä—É–± –∏–ª–∏ {res["investing"]["percent"][1:-1]})\n"
                f"Garantex USDT/RUBüí≤ - {res["garantex"]} {ch['garant']}\n"
                f"–¶–ë –†–§ USD/RUBüí≤ - {res["centralb"]} {ch['central']}\n"
                f"–¶–ë –†–§ CNY/RUB ¬• - {res["centralb_cny"]}\n"
                f"–¶–ë –†–§ EUR/RUB ‚Ç¨ - {res["centralb_eur"]}\n"
                f"XE USD/RUBüí≤ - {res["xe_usd"]} {ch['xe']}\n"
                f"XE USD/CHY ¬• - {res["xe_cny"]}\n"
                f"XE EUR/USD ‚Ç¨ - {res["xe_eur"]}\n"
                f"XE EUR/RUB ‚Ç¨ - {res["xe_e_r"]}\n"
                
    )
    return main_text



async def price_correction(imp: dict) -> str:
    r"""
    –§–æ—Ä–º–∏—Ä—É–µ—Ç –∏ —Ä–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä—ã USD\RUB
    –∫ Investing.com
    :imp: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–æ—Ç–∏—Ä–æ–≤–æ–∫
    :return: —Å–ª–æ–≤–∞—Ä—å —Å —Å—Ç—Ä–æ–∫–∞–º–∏ —Ä–∞—Å—á–µ—Ç–∞ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è
    """
    try:
        invest = Decimal(imp['investing']['price'].replace(',', '.'))
        garant = Decimal(imp['garantex'])
        central = Decimal(imp['centralb'].replace(',', '.'))
        xe = Decimal(imp['xe_usd'])
    except (KeyError, ValueError) as e:
        print(f"Error processing input data: {e}")
        return None
    

    garant_perc = (abs(invest - garant) / invest) * 100
    cent_perc = (abs(invest - central) / invest) * 100
    xe_perc = (abs(invest-xe)/ invest) * 100

    garant_perc_str = f'{garant_perc:.2f}%'
    cent_perc_str = f'{cent_perc:.2f}%'
    gar_rub_str = f'{abs(invest - garant):.2f} —Ä—É–±'
    cent_rub_str = f'{abs(invest - central):.2f} —Ä—É–±'
    xe_rub_str = f'{abs(invest - xe):.2f} —Ä—É–±'
    xe_perc_str = f'{xe_perc:.2f}%'
    
    
    pointer = lambda diff: ['‚¨Ü','+'] if invest < diff else ['‚¨á','-']

    return {
        "garant": f'({pointer(garant)[0]} {garant_perc_str} –∏–ª–∏ {pointer(garant)[1]}{gar_rub_str})',
        "central": f'({pointer(central)[0]} {cent_perc_str} –∏–ª–∏ {pointer(central)[1]}{cent_rub_str})',
        "xe": f'({pointer(xe)[0]} {xe_perc_str} –∏–ª–∏ {pointer(xe)[1]}{xe_rub_str})'

    }